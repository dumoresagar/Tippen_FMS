# Generated by Django 4.2.5 on 2023-11-29 13:10

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('department_name', models.CharField(blank=True, max_length=30, null=True)),
                ('created_by', models.CharField(blank=True, max_length=30, null=True)),
                ('active_status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=8)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Department',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('district_code', models.CharField(blank=True, max_length=225, null=True, unique=True)),
                ('district_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'District',
            },
        ),
        migrations.CreateModel(
            name='DocumentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Document_Status',
                'verbose_name_plural': 'Document_Status',
            },
        ),
        migrations.CreateModel(
            name='MapType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('map_code', models.CharField(blank=True, max_length=200, null=True)),
                ('mapname_english', models.CharField(blank=True, max_length=100, null=True)),
                ('mapname_marathi', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'MapType',
                'verbose_name_plural': 'MapType',
            },
        ),
        migrations.CreateModel(
            name='Taluka',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('taluka_code', models.CharField(blank=True, max_length=225, null=True, unique=True)),
                ('taluka_name', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='district_id', to='core.district')),
            ],
            options={
                'verbose_name': 'Taluka',
                'verbose_name_plural': 'Taluka',
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('village_code', models.CharField(blank=True, max_length=225, null=True, unique=True)),
                ('village_name', models.CharField(blank=True, max_length=100, null=True)),
                ('taluka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taluka_id', to='core.taluka')),
            ],
            options={
                'verbose_name': 'Village',
                'verbose_name_plural': 'Village',
            },
        ),
        migrations.CreateModel(
            name='TeamDistrictMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('district_id', models.ManyToManyField(blank=True, related_name='user_department', to='core.district')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_district', to='users.teammaster')),
            ],
            options={
                'verbose_name': 'Team District',
                'verbose_name_plural': 'Team District',
            },
        ),
        migrations.CreateModel(
            name='PreScanningDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('inward_document', models.IntegerField(blank=True, null=True)),
                ('document_rejected', models.IntegerField(blank=True, null=True)),
                ('barcode_generated', models.IntegerField(blank=True, null=True)),
                ('marking_count', models.IntegerField(blank=True, null=True)),
                ('scanning_count', models.IntegerField(blank=True, null=True)),
                ('rescanning_count', models.IntegerField(blank=True, null=True)),
                ('document_return', models.IntegerField(blank=True, null=True)),
                ('number_of_people_present', models.IntegerField(blank=True, null=True)),
                ('mis_date', models.DateTimeField(blank=True, null=True)),
                ('district_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prescan_district_id', to='core.district')),
                ('taluka_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prescan_taluka_id', to='core.taluka')),
            ],
            options={
                'verbose_name': 'PreScanning Document',
                'verbose_name_plural': 'PreScanning Document',
            },
        ),
        migrations.CreateModel(
            name='PaginationMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('page_size', models.IntegerField(blank=True, default=20, null=True)),
                ('pagination_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pagination_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pagination Master',
                'verbose_name_plural': 'Pagination Master',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('scan_upload', models.FileField(blank=True, null=True, upload_to=core.models.dynamic_scan_upload_path)),
                ('barcode_number', models.CharField(blank=True, max_length=225, null=True, unique=True)),
                ('file_name', models.CharField(blank=True, max_length=225, null=True)),
                ('district_code', models.CharField(blank=True, max_length=225, null=True)),
                ('village_code', models.CharField(blank=True, max_length=225, null=True)),
                ('taluka_code', models.CharField(blank=True, max_length=30, null=True)),
                ('map_code', models.CharField(blank=True, max_length=225, null=True)),
                ('scan_uploaded_date', models.DateTimeField(blank=True, null=True)),
                ('rectify_upload', models.FileField(blank=True, null=True, upload_to=core.models.dynamic_rectify_upload_path)),
                ('rectify_assign_date', models.DateTimeField(blank=True, null=True)),
                ('rectify_completed_date', models.DateTimeField(blank=True, null=True)),
                ('digitize_upload', models.FileField(blank=True, null=True, upload_to=core.models.dynamic_digitize_upload_path)),
                ('polygon_count', models.IntegerField(blank=True, default=0)),
                ('qc_polygon_count', models.IntegerField(blank=True, default=0)),
                ('digitize_assign_date', models.DateTimeField(blank=True, null=True)),
                ('digitize_completed_date', models.DateTimeField(blank=True, null=True)),
                ('qc_upload', models.FileField(blank=True, null=True, upload_to=core.models.dynamic_qc_upload_path)),
                ('qc_assign_date', models.DateTimeField(blank=True, null=True)),
                ('qc_completed_date', models.DateTimeField(blank=True, null=True)),
                ('pdf_upload', models.FileField(blank=True, null=True, upload_to=core.models.dynamic_pdf_upload_path)),
                ('pdf_assign_date', models.DateTimeField(blank=True, null=True)),
                ('pdf_completed_date', models.DateTimeField(blank=True, null=True)),
                ('shape_upload', models.FileField(blank=True, null=True, upload_to=core.models.dynamic_shape_upload_path)),
                ('shape_assign_date', models.DateTimeField(blank=True, null=True)),
                ('shape_completed_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=225, null=True)),
                ('bel_scan_uploaded', models.BooleanField(blank=True, default=False, null=True)),
                ('bel_draft_uploaded', models.BooleanField(blank=True, default=False, null=True)),
                ('bel_gov_scan_qc_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('bel_gov_draft_qc_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agency_document', to='users.agency')),
                ('current_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.documentstatus')),
                ('digitize_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digitize_agency_id', to='users.agency')),
                ('digitize_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digitizeby_user', to=settings.AUTH_USER_MODEL)),
                ('pdf_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pdfby_user', to=settings.AUTH_USER_MODEL)),
                ('qc_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qc_agency_id', to='users.agency')),
                ('qc_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qcby_user', to=settings.AUTH_USER_MODEL)),
                ('rectify_agency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rectify_agency_id', to='users.agency')),
                ('rectify_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rectifyby_user', to=settings.AUTH_USER_MODEL)),
                ('scan_uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scanby_user', to=settings.AUTH_USER_MODEL)),
                ('shape_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shapeby_user', to=settings.AUTH_USER_MODEL)),
                ('team_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_team_id', to='users.teammaster')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Document',
            },
        ),
        migrations.CreateModel(
            name='DistrictTalukaAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('district_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_district_id', to='core.district')),
                ('taluka_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_taluka_id', to='core.taluka')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'District Taluka Admin',
                'verbose_name_plural': 'District Taluka Admin',
            },
        ),
    ]
